// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`html "a" ignores and warns about unsupported attributes 1`] = `
<Text
  role="link"
  style={
    {
      "boxSizing": "content-box",
      "color": "blue",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "a" supports additional anchor attributes 1`] = `
<Text
  onPress={[Function]}
  role="link"
  style={
    {
      "boxSizing": "content-box",
      "color": "blue",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "a" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "color": "blue",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "a" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  role="link"
  style={
    {
      "boxSizing": "content-box",
      "color": "blue",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "article" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "article" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "article" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "aside" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "aside" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "aside" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "b" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "b" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "b" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "bdi" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "bdi" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "bdi" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "bdo" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "bdo" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "bdo" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "blockquote" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "blockquote" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "blockquote" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "br" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
>
  

</Text>
`;

exports[`html "br" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  

</Text>
`;

exports[`html "br" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
>
  

</Text>
`;

exports[`html "button" ignores and warns about unsupported attributes 1`] = `
<Pressable
  style={
    {
      "borderWidth": 1,
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "button" supports additional button attributes 1`] = `
<Pressable
  disabled={true}
  focusable={false}
  style={
    {
      "borderWidth": 1,
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "button" supports global attributes 1`] = `
<Pressable
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "borderWidth": 1,
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</Pressable>
`;

exports[`html "button" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "borderWidth": 1,
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "code" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontFamily": "Menlo",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "code" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontFamily": "Menlo",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "code" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontFamily": "Menlo",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "del" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "textDecorationLine": "line-through",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "del" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "textDecorationLine": "line-through",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "del" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "textDecorationLine": "line-through",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "div" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "div" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "div" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "em" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontStyle": "italic",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "em" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontStyle": "italic",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "em" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontStyle": "italic",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "fieldset" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "fieldset" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "fieldset" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "footer" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "footer" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "footer" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "form" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "form" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "form" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "h1" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h1" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "h1" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h2" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h2" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "h2" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h3" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h3" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "h3" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h4" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h4" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "h4" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h5" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h5" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "h5" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h6" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "h6" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "h6" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontSize": 24,
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "header" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  role="header"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "header" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "header" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  role="header"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "hr" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "backgroundColor": "black",
      "boxSizing": "border-box",
      "height": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html "hr" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "backgroundColor": "black",
      "boxSizing": "border-box",
      "direction": "ltr",
      "display": "none",
      "height": 1,
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "hr" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "backgroundColor": "black",
      "boxSizing": "border-box",
      "height": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html "i" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontStyle": "italic",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "i" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontStyle": "italic",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "i" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontStyle": "italic",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "img" ignores and warns about unsupported attributes 1`] = `
<Image
  style={
    {
      "boxSizing": "content-box",
      "objectFit": "fill",
      "position": "static",
    }
  }
/>
`;

exports[`html "img" supports additional image attributes 1`] = `
<Image
  alt="Alt text"
  crossOrigin="anonymous"
  height={100}
  onError={[Function]}
  onLoad={[Function]}
  referrerPolicy="no-referrer"
  src="https://src.jpg"
  srcSet="https://srcSet-1x.jpg 1x, https://srcSet-2x.jpg 2x"
  style={
    {
      "aspectRatio": 1,
      "boxSizing": "content-box",
      "height": 100,
      "objectFit": "fill",
      "position": "static",
      "width": 100,
    }
  }
  width={100}
/>
`;

exports[`html "img" supports global attributes 1`] = `
<Image
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "objectFit": "fill",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  children
</Image>
`;

exports[`html "img" supports inline event handlers 1`] = `
<Image
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "objectFit": "fill",
      "position": "static",
    }
  }
/>
`;

exports[`html "input" ignores and warns about unsupported attributes 1`] = `
<TextInput
  style={
    {
      "borderWidth": 1,
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "input" supports additional input attributes 1`] = `
<TextInput
  defaultValue="defaultValue"
  disabled={true}
  editable={false}
  focusable={false}
  maxLength="10"
  onChange={[Function]}
  placeholder="Placeholder"
  style={
    {
      "borderWidth": 1,
      "boxSizing": "content-box",
      "position": "static",
    }
  }
  value="value"
/>
`;

exports[`html "input" supports global attributes 1`] = `
<TextInput
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  enterKeyHint="go"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  inputMode="numeric"
  nativeID="some-id"
  role="article"
  spellCheck={true}
  style={
    {
      "--custom-property": "inline",
      "borderWidth": 1,
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</TextInput>
`;

exports[`html "input" supports inline event handlers 1`] = `
<TextInput
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onKeyPress={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onSubmitEditing={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "borderWidth": 1,
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "ins" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "ins" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "ins" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "kbd" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontFamily": "Menlo",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "kbd" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontFamily": "Menlo",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "kbd" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontFamily": "Menlo",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "label" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "label" supports additional label attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "label" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "label" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "main" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "main" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "main" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "mark" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "backgroundColor": "yellow",
      "boxSizing": "content-box",
      "color": "black",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "mark" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "backgroundColor": "yellow",
      "boxSizing": "content-box",
      "color": "black",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "mark" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "backgroundColor": "yellow",
      "boxSizing": "content-box",
      "color": "black",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "nav" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "nav" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "nav" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "ol" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "ol" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "ol" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "optgroup" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "optgroup" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "optgroup" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "option" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "option" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
/>
`;

exports[`html "option" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "option" supports input attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
>
  label
</Text>
`;

exports[`html "p" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "p" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "p" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "pre" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontFamily": "Menlo",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "pre" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontFamily": "Menlo",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "pre" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontFamily": "Menlo",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "s" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "textDecorationLine": "line-through",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "s" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "textDecorationLine": "line-through",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "s" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "textDecorationLine": "line-through",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "section" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "section" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "section" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "select" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "select" supports additional select attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "select" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "select" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "span" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "span" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "span" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "strong" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "strong" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "strong" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "fontWeight": "bold",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "sub" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "sub" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "sub" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "sup" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "sup" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "sup" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "textarea" ignores and warns about unsupported attributes 1`] = `
<TextInput
  multiline={true}
  style={
    {
      "borderWidth": 1,
      "boxSizing": "content-box",
      "position": "static",
      "verticalAlign": "top",
    }
  }
/>
`;

exports[`html "textarea" supports additional textarea attributes 1`] = `
<TextInput
  defaultValue="defaultValue"
  disabled={true}
  editable={false}
  focusable={false}
  maxLength="10"
  multiline={true}
  numberOfLines={3}
  onChange={[Function]}
  placeholder="Placeholder"
  style={
    {
      "borderWidth": 1,
      "boxSizing": "content-box",
      "position": "static",
      "verticalAlign": "top",
    }
  }
  value="value"
/>
`;

exports[`html "textarea" supports global attributes 1`] = `
<TextInput
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  enterKeyHint="go"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  multiline={true}
  nativeID="some-id"
  role="article"
  spellCheck={true}
  style={
    {
      "--custom-property": "inline",
      "borderWidth": 1,
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "verticalAlign": "top",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</TextInput>
`;

exports[`html "textarea" supports inline event handlers 1`] = `
<TextInput
  multiline={true}
  onBlur={[Function]}
  onChange={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onKeyPress={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onSubmitEditing={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "borderWidth": 1,
      "boxSizing": "content-box",
      "position": "static",
      "verticalAlign": "top",
    }
  }
/>
`;

exports[`html "u" ignores and warns about unsupported attributes 1`] = `
<Text
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "u" supports global attributes 1`] = `
<Text
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
      "writingDirection": "ltr",
    }
  }
  testID="some-test-id"
>
  children
</Text>
`;

exports[`html "u" supports inline event handlers 1`] = `
<Text
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
      "textDecorationLine": "underline",
      "userSelect": "auto",
    }
  }
/>
`;

exports[`html "ul" ignores and warns about unsupported attributes 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html "ul" supports global attributes 1`] = `
<ViewNativeComponent
  accessibilityElementsHidden={true}
  accessibilityLabel="Label"
  accessibilityLabelledBy={
    [
      "labelledby",
    ]
  }
  accessibilityLiveRegion={true}
  accessibilityPosInSet={1}
  accessibilitySetSize={2}
  accessibilityState={
    {
      "busy": true,
      "checked": true,
      "disabled": true,
      "expanded": true,
      "selected": true,
    }
  }
  accessibilityValue={
    {
      "max": 10,
      "min": 0,
      "now": 5,
      "text": "Five",
    }
  }
  accessibilityViewIsModal={true}
  experimental_layoutConformance="strict"
  focusable={true}
  importantForAccessibility="no-hide-descendants"
  nativeID="some-id"
  role="article"
  style={
    {
      "--custom-property": "inline",
      "boxSizing": "content-box",
      "direction": "ltr",
      "display": "none",
      "position": "static",
    }
  }
  testID="some-test-id"
>
  <Text
    style={
      {
        "writingDirection": "ltr",
      }
    }
  >
    children
  </Text>
</ViewNativeComponent>
`;

exports[`html "ul" supports inline event handlers 1`] = `
<Pressable
  onBlur={[Function]}
  onFocus={[Function]}
  onGotPointerCapture={[Function]}
  onLostPointerCapture={[Function]}
  onMouseDown={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  onMouseUp={[Function]}
  onPointerCancel={[Function]}
  onPointerDown={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  onPointerMove={[Function]}
  onPointerOut={[Function]}
  onPointerOver={[Function]}
  onPointerUp={[Function]}
  onPress={[Function]}
  onScroll={[Function]}
  onTouchCancel={[Function]}
  onTouchEnd={[Function]}
  onTouchMove={[Function]}
  onTouchStart={[Function]}
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;

exports[`html temporary data-* props support 1`] = `
<ViewNativeComponent
  experimental_layoutConformance="strict"
  style={
    {
      "boxSizing": "content-box",
      "position": "static",
    }
  }
/>
`;
