// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`html block layout override of flex layout: block layout override of flex 1`] = `
<View
  experimental_layoutConformance="strict"
  style={
    {
      "alignItems": "stretch",
      "display": "flex",
      "flexBasis": "auto",
      "flexDirection": "column",
      "flexShrink": 0,
      "flexWrap": "nowrap",
      "justifyContent": "flex-start",
      "position": "static",
    }
  }
>
  <View
    experimental_layoutConformance="strict"
    style={
      {
        "position": "static",
      }
    }
  />
</View>
`;

exports[`html default block layout: block layout 1`] = `
<View
  experimental_layoutConformance="strict"
  style={
    {
      "position": "static",
    }
  }
/>
`;

exports[`html default flex layout: flex layout 1`] = `
<View
  experimental_layoutConformance="strict"
  style={
    {
      "alignItems": "stretch",
      "display": "flex",
      "flexBasis": "auto",
      "flexDirection": "row",
      "flexShrink": 1,
      "flexWrap": "nowrap",
      "justifyContent": "flex-start",
      "position": "static",
    }
  }
>
  <View
    experimental_layoutConformance="strict"
    style={
      {
        "flexShrink": 1,
        "position": "static",
      }
    }
  />
  <View
    experimental_layoutConformance="strict"
    style={
      {
        "flexShrink": 1,
        "position": "static",
      }
    }
  />
</View>
`;

exports[`html hover styles onMouseEnter 1`] = `
<View
  experimental_layoutConformance="strict"
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  style={
    {
      "backgroundColor": "blue",
      "position": "static",
    }
  }
/>
`;

exports[`html hover styles onMouseLeave 1`] = `
<View
  experimental_layoutConformance="strict"
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  style={
    {
      "backgroundColor": "red",
      "position": "static",
    }
  }
/>
`;

exports[`html hover styles onPointerEnter 1`] = `
<View
  experimental_layoutConformance="strict"
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  style={
    {
      "backgroundColor": "blue",
      "position": "static",
    }
  }
/>
`;

exports[`html hover styles onPointerLeave 1`] = `
<View
  experimental_layoutConformance="strict"
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onPointerEnter={[Function]}
  onPointerLeave={[Function]}
  style={
    {
      "backgroundColor": "red",
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "img" loading options 1`] = `
<Image
  crossOrigin="use-credentials"
  decoding="async"
  fetchPriority="auto"
  loading="lazy"
  referrerPolicy="no-referrer"
  src="https://src.jpg"
  style={
    {
      "objectFit": "fill",
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "img" loading options with srcSet 1`] = `
<Image
  crossOrigin="use-credentials"
  decoding="async"
  fetchPriority="auto"
  loading="lazy"
  referrerPolicy="no-referrer"
  srcSet="https://src.jpg 1x, https://srcx2.jpg 2x"
  style={
    {
      "objectFit": "fill",
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "additional-name" 1`] = `
<TextInput
  autoComplete="additional-name"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "address-line1" 1`] = `
<TextInput
  autoComplete="address-line1"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "address-line2" 1`] = `
<TextInput
  autoComplete="address-line2"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "bday" 1`] = `
<TextInput
  autoComplete="bday"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "bday-day" 1`] = `
<TextInput
  autoComplete="bday-day"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "bday-month" 1`] = `
<TextInput
  autoComplete="bday-month"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "bday-year" 1`] = `
<TextInput
  autoComplete="bday-year"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "cc-csc" 1`] = `
<TextInput
  autoComplete="cc-csc"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "cc-exp" 1`] = `
<TextInput
  autoComplete="cc-exp"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "cc-exp-month" 1`] = `
<TextInput
  autoComplete="cc-exp-month"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "cc-exp-year" 1`] = `
<TextInput
  autoComplete="cc-exp-year"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "cc-number" 1`] = `
<TextInput
  autoComplete="cc-number"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "country" 1`] = `
<TextInput
  autoComplete="country"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "current-password" 1`] = `
<TextInput
  autoComplete="current-password"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "email" 1`] = `
<TextInput
  autoComplete="email"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "family-name" 1`] = `
<TextInput
  autoComplete="family-name"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "given-name" 1`] = `
<TextInput
  autoComplete="given-name"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "honorific-prefix" 1`] = `
<TextInput
  autoComplete="honorific-prefix"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "honorific-suffix" 1`] = `
<TextInput
  autoComplete="honorific-suffix"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "name" 1`] = `
<TextInput
  autoComplete="name"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "new-password" 1`] = `
<TextInput
  autoComplete="new-password"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "nickname" 1`] = `
<TextInput
  autoComplete="nickname"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "off" 1`] = `
<TextInput
  autoComplete="off"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "one-time-code" 1`] = `
<TextInput
  autoComplete="one-time-code"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "organization" 1`] = `
<TextInput
  autoComplete="organization"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "organization-title" 1`] = `
<TextInput
  autoComplete="organization-title"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "postal-code" 1`] = `
<TextInput
  autoComplete="postal-code"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "sex" 1`] = `
<TextInput
  autoComplete="sex"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "street-address" 1`] = `
<TextInput
  autoComplete="street-address"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "tel" 1`] = `
<TextInput
  autoComplete="tel"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "tel-country-code" 1`] = `
<TextInput
  autoComplete="tel-country-code"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "tel-national" 1`] = `
<TextInput
  autoComplete="tel-national"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "url" 1`] = `
<TextInput
  autoComplete="url"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "autoComplete" value: "username" 1`] = `
<TextInput
  autoComplete="username"
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills "input" prop "disabled" 1`] = `
<TextInput
  aria-disabled={true}
  dir="auto"
  disabled={true}
  readOnly={true}
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
  tabIndex={-1}
/>
`;

exports[`html html prop polyfills "input" prop "type" value: "email" 1`] = `
<TextInput
  dir="auto"
  inputMode="email"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
  type="email"
/>
`;

exports[`html html prop polyfills "input" prop "type" value: "number" 1`] = `
<TextInput
  dir="auto"
  inputMode="numeric"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
  type="number"
/>
`;

exports[`html html prop polyfills "input" prop "type" value: "password" 1`] = `
<TextInput
  dir="auto"
  secureTextEntry={true}
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
  type="password"
/>
`;

exports[`html html prop polyfills "input" prop "type" value: "search" 1`] = `
<TextInput
  dir="auto"
  inputMode="search"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
  type="search"
/>
`;

exports[`html html prop polyfills "input" prop "type" value: "tel" 1`] = `
<TextInput
  dir="auto"
  inputMode="tel"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
  type="tel"
/>
`;

exports[`html html prop polyfills "input" prop "type" value: "url" 1`] = `
<TextInput
  dir="auto"
  inputMode="url"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
  type="url"
/>
`;

exports[`html html prop polyfills "textarea" prop "disabled" 1`] = `
<TextInput
  aria-disabled={true}
  dir="auto"
  disabled={true}
  multiline={true}
  readOnly={true}
  style={
    {
      "borderWidth": 1,
      "position": "static",
      "verticalAlign": "top",
    }
  }
  tabIndex={-1}
/>
`;

exports[`html html prop polyfills hidden value 1`] = `
<View
  experimental_layoutConformance="strict"
  hidden={true}
  style={
    {
      "display": "none",
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills hidden value: "false" 1`] = `
<TextInput
  dir="auto"
  hidden={false}
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills hidden value: "false" 2`] = `
<TextInput
  dir="auto"
  hidden="false"
  style={
    {
      "borderWidth": 1,
      "display": "none",
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills hidden value: "hidden" 1`] = `
<TextInput
  dir="auto"
  hidden="hidden"
  style={
    {
      "borderWidth": 1,
      "display": "none",
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills hidden value: "true" 1`] = `
<TextInput
  dir="auto"
  hidden={true}
  style={
    {
      "borderWidth": 1,
      "display": "none",
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills hidden value: "true" 2`] = `
<TextInput
  dir="auto"
  hidden="true"
  style={
    {
      "borderWidth": 1,
      "display": "none",
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills hidden value: "until-found" 1`] = `
<TextInput
  dir="auto"
  hidden="until-found"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills hidden value: display set 1`] = `
<View
  experimental_layoutConformance="strict"
  hidden={true}
  style={
    {
      "alignItems": "stretch",
      "display": "flex",
      "flexBasis": "auto",
      "flexDirection": "row",
      "flexShrink": 1,
      "flexWrap": "nowrap",
      "justifyContent": "flex-start",
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills inputMode value: "decimal" 1`] = `
<TextInput
  dir="auto"
  inputMode="decimal"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills inputMode value: "email" 1`] = `
<TextInput
  dir="auto"
  inputMode="email"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills inputMode value: "numeric" 1`] = `
<TextInput
  dir="auto"
  inputMode="numeric"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills inputMode value: "search" 1`] = `
<TextInput
  dir="auto"
  inputMode="search"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills inputMode value: "tel" 1`] = `
<TextInput
  dir="auto"
  inputMode="tel"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills inputMode value: "url" 1`] = `
<TextInput
  dir="auto"
  inputMode="url"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html html prop polyfills tabIndex value 1`] = `
<TextInput
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
  tabIndex={-1}
/>
`;

exports[`html style polyfills "caretColor" transparent 1`] = `
<TextInput
  caretHidden={true}
  dir="auto"
  style={
    {
      "borderWidth": 1,
      "position": "static",
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : backgroundColor transition end 1`] = `
<Animated.View
  style={
    {
      "backgroundColor": {
        "inputRange": [
          0,
          1,
        ],
        "outputRange": [
          "rgba(0,0,0,0.1)",
          "rgba(255,255,255,0.9)",
        ],
      },
      "position": "static",
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : backgroundColor transition start 1`] = `
<Animated.View
  style={
    {
      "backgroundColor": {
        "inputRange": [
          0,
          1,
        ],
        "outputRange": [
          "rgba(0,0,0,0.1)",
          "rgba(0,0,0,0.1)",
        ],
      },
      "position": "static",
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : cubic-bezier timing function 1`] = `
<Animated.View
  style={
    {
      "opacity": {
        "inputRange": [
          0,
          1,
        ],
        "outputRange": [
          1,
          1,
        ],
      },
      "position": "static",
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : opacity transition end 1`] = `
<Animated.View
  style={
    {
      "opacity": {
        "inputRange": [
          0,
          1,
        ],
        "outputRange": [
          1,
          0,
        ],
      },
      "position": "static",
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : opacity transition start 1`] = `
<Animated.View
  style={
    {
      "opacity": {
        "inputRange": [
          0,
          1,
        ],
        "outputRange": [
          1,
          1,
        ],
      },
      "position": "static",
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : transform transition end 1`] = `
<Animated.View
  style={
    {
      "position": "static",
      "transform": [
        {
          "translateY": {
            "inputRange": [
              0,
              1,
            ],
            "outputRange": [
              0,
              50,
            ],
          },
        },
        {
          "rotateX": {
            "inputRange": [
              0,
              1,
            ],
            "outputRange": [
              "0deg",
              "90deg",
            ],
          },
        },
      ],
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : transform transition start 1`] = `
<Animated.View
  style={
    {
      "position": "static",
      "transform": [
        {
          "translateY": {
            "inputRange": [
              0,
              1,
            ],
            "outputRange": [
              0,
              0,
            ],
          },
        },
        {
          "rotateX": {
            "inputRange": [
              0,
              1,
            ],
            "outputRange": [
              "0deg",
              "0deg",
            ],
          },
        },
      ],
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : transition all properties 1`] = `
<Animated.View
  style={
    {
      "opacity": {
        "inputRange": [
          0,
          1,
        ],
        "outputRange": [
          1,
          1,
        ],
      },
      "position": "static",
      "transform": [
        {
          "translateY": {
            "inputRange": [
              0,
              1,
            ],
            "outputRange": [
              0,
              0,
            ],
          },
        },
        {
          "rotateX": {
            "inputRange": [
              0,
              1,
            ],
            "outputRange": [
              "0deg",
              "0deg",
            ],
          },
        },
      ],
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : transition multiple properties 1`] = `
<Animated.View
  style={
    {
      "opacity": {
        "inputRange": [
          0,
          1,
        ],
        "outputRange": [
          1,
          1,
        ],
      },
      "position": "static",
      "transform": [
        {
          "translateY": {
            "inputRange": [
              0,
              1,
            ],
            "outputRange": [
              0,
              0,
            ],
          },
        },
        {
          "rotateX": {
            "inputRange": [
              0,
              1,
            ],
            "outputRange": [
              "0deg",
              "0deg",
            ],
          },
        },
      ],
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : transition property end 1`] = `
<View
  experimental_layoutConformance="strict"
  style={
    {
      "position": "static",
      "transform": "translateY(50px) rotateX(90deg)",
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : width transition end 1`] = `
<Animated.View
  style={
    {
      "position": "static",
      "width": {
        "inputRange": [
          0,
          1,
        ],
        "outputRange": [
          100,
          200,
        ],
      },
    }
  }
/>
`;

exports[`html style polyfills "transition" properties : width transition start 1`] = `
<Animated.View
  style={
    {
      "position": "static",
      "width": {
        "inputRange": [
          0,
          1,
        ],
        "outputRange": [
          100,
          100,
        ],
      },
    }
  }
/>
`;

exports[`html style polyfills default inherited text styles 1`] = `
<View
  experimental_layoutConformance="strict"
  style={
    {
      "position": "static",
    }
  }
>
  <View
    experimental_layoutConformance="strict"
    style={
      {
        "position": "static",
      }
    }
  >
    <Text
      dir="auto"
      style={
        {
          "color": "red",
          "direction": "rtl",
          "fontFamily": "Arial",
          "fontSize": 32,
          "fontStyle": "italic",
          "fontVariant": "variant",
          "fontWeight": "300",
          "lineHeight": 48,
          "position": "static",
          "textAlign": "right",
          "textTransform": "uppercase",
          "userSelect": "auto",
        }
      }
    >
      Text should 
      <Text
        dir="auto"
        style={
          {
            "color": "red",
            "direction": "rtl",
            "fontFamily": "Arial",
            "fontSize": 64,
            "fontStyle": "italic",
            "fontVariant": "variant",
            "fontWeight": "300",
            "lineHeight": 96,
            "position": "static",
            "textAlign": "right",
            "textTransform": "uppercase",
            "userSelect": "auto",
          }
        }
      >
        inherit
      </Text>
       div styles
    </Text>
    <TextInput
      dir="auto"
      placeholder="Input should inherit div styles"
      style={
        {
          "borderWidth": 1,
          "color": "red",
          "direction": "rtl",
          "fontFamily": "Arial",
          "fontSize": 16,
          "fontStyle": "italic",
          "fontVariant": "variant",
          "fontWeight": "300",
          "lineHeight": 24,
          "position": "static",
          "textAlign": "right",
          "textTransform": "uppercase",
        }
      }
    />
  </View>
</View>
`;

exports[`html style polyfills inherited themes 1`] = `
[
  <Text
    dir="auto"
    style={
      {
        "backgroundColor": "pink",
        "color": "red",
        "position": "static",
        "userSelect": "auto",
      }
    }
  >
    Expect color:red
  </Text>,
  <Text
    dir="auto"
    style={
      {
        "backgroundColor": "pink",
        "color": "green",
        "position": "static",
        "userSelect": "auto",
      }
    }
  >
    Expect color:green
  </Text>,
  <View
    experimental_layoutConformance="strict"
    style={
      {
        "position": "static",
      }
    }
  >
    <Text
      dir="auto"
      style={
        {
          "backgroundColor": "pink",
          "color": "green",
          "position": "static",
          "userSelect": "auto",
        }
      }
    >
      Expect color:green (inherited)
    </Text>
    <View
      experimental_layoutConformance="strict"
      style={
        {
          "position": "static",
        }
      }
    >
      <Text
        dir="auto"
        style={
          {
            "backgroundColor": "pink",
            "color": "blue",
            "position": "static",
            "userSelect": "auto",
          }
        }
      >
        Expect color:blue (nested)
      </Text>
    </View>
  </View>,
  <Text
    dir="auto"
    style={
      {
        "backgroundColor": "pink",
        "color": "red",
        "position": "static",
        "userSelect": "auto",
      }
    }
  >
    Expect color:red
  </Text>,
]
`;

exports[`html style polyfills legacy: ThemeProvider 1`] = `
<Text
  dir="auto"
  style={
    {
      "color": "red",
      "position": "static",
      "userSelect": "auto",
    }
  }
>
  Expect color:red
</Text>
`;
